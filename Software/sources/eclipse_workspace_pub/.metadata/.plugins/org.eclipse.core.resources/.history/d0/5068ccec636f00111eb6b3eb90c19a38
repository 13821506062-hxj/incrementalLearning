'''
Created on Jan 9, 2012

@author: jqueisse
'''


import TestFramework.Framework as Framework
import TestFramework.ControlLogic as ControlLogic

import matplotlib.pyplot as pyplot

import time


if __name__ == '__main__':
    print "start experiment!"

    #time.sleep(60*20)

    sourceDataset=[]
    #Home3_shadows_timesimulation_autumn7_run1
    #Home4_shadows_noTimesimulation_autumn7_run4
    sourceDataset=["/hri/localdisk/jqueisse/datasets/Home4_shadows_noTimesimulation_autumn7_run4/"]
    evalDataset = []
    #evalDataset = ["/hri/localdisk/jqueisse/datasets/Factory1_noShadows_noTimesimulation_autumn0_run1/"]
    #Home4_shadows_noTimesimulation_autumn7_run4
    evalDataset=["/hri/localdisk/jqueisse/datasets/Home4_shadows_noTimesimulation_autumn7_run5/"]



    #evalDataset = ["/hri/localdisk/jqueisse/datasets/Home4_shadows_noTimesimulation_autumn7_selecteddata/"]



    parameter=dict()
    parameter["in_size"]=(256,256)
    parameter["patchsize"]=5
    parameter["eigenvectors"]=3


    parameter["g_max"]=200
    parameter["probability_history"]=200.0
    parameter["combination_mode"]="dyn"
    parameter["trainsteps"]=12500

    parameter["PCA_normalization"]=True



    #contextactivation:
    parameter["position"]=True
    parameter["rotation"]=True
    parameter["time"]=False

    parameter["trainallpatches"]=False

    #offline_svm_lin_context130_2EV
    #offline_svm_lin_context129
    parameter["offlinecl_data"]="/hri/localdisk/jqueisse/experiments/offline_gxlvq100/train_finish_paramid0_cl.p"


    startstate=None
    #startstate="/hri/localdisk/jqueisse/experiments/online_combination149/train_finish_paramid0_cl.p"

    pcafile = "/hri/localdisk/jqueisse/experiments/pca_estimator_patchsize5_run5/train_finish_cl.p"
    parameter["pca_data"]=pcafile

    ctrl_logic= ControlLogic.OnlineSystemNoSVM(parameter)
    framework = Framework.TestFrameworkLearning(ctrl_logic, sourceDataset, evalDataset, startstate, evaliter=5, trainiter=20, maxpatchesperview=100) #, singleview=1427


    i=0
    while(framework.doStep()):
        pass
    #print "Step %.2f"%i

    pyplot.show()
    print "Finish"
